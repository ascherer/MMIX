@x [0]
\input pdfwebtocfront
@y
\ifx\undefined\pdfpagewidth \else
\pdfpagewidth=\pagewidth \advance\pdfpagewidth by 1in
\pdfpageheight=\fullpageheight \advance\pdfpageheight by 1in
\ifpdflua \pdfhorigin=0.5in \pdfvorigin=0.5in
\else \global\hoffset=-0.5in \global\voffset=-0.5in \fi \fi

\ifx\undefined\eightpoint \input pdfwebtocfront \else
{\eightpoint \let\ninett=\eighttt \editorsnote \vskip7mm}
\fi
@z

@x [3]
@* Interface.  Here comes the exported interface of this program module.
@y
@* Interface.  Here comes the exported interface of this program module.
@-MMIX_IO_H@>
@%
@$mmgetchars {MMIX-PIPE}381 \&{static} \&{int}@>
@$mmgetchars {MMIX-SIM}114 \&{static} \&{int}@>
@$mmputchars {MMIX-PIPE}384 \&{static} \&{void}@>
@$mmputchars {MMIX-SIM}117 \&{static} \&{void}@>
@$stdin_chr {MMIX-PIPE}387 \&{static} \&{char}@>
@$stdin_chr {MMIX-SIM}120 \&{static} \&{char}@>
@z

@x [8]
octa mmix_fopen(
@y
@$mmgetchars {MMIX-IO}4 ``mixins''@>
octa mmix_fopen(
@z

@x [10]
@ If the simulator is being used interactively, we can avoid competition
@y
@r @ If the simulator is being used interactively, we can avoid competition
@z

@x [11]
octa mmix_fclose(
@y
@$mode {MMIX-IO}5 \&{int}@>
octa mmix_fclose(
@z

@x [12]
octa mmix_fread(
@y
@$mmputchars {MMIX-IO}4 ``mixins''@>
@$stdin_chr {MMIX-IO}4 ``mixins''@>
octa mmix_fread(
@z

@x [17]
    *p++=stdin_chr();@+*p++=stdin_chr();
@y
    *p++=stdin_chr();@+*p++=stdin_chr(); @+
@z

@x [24]
static char *trip_warning[]={
@y
static char *trip_warning[]={ @|
@z
@x [24]
"TRIP",
"integer divide check",
"integer overflow",
"float-to-fix overflow",
"invalid floating point operation",
"floating point overflow",
"floating point underflow",
"floating point division by zero",
@y
"TRIP", @|
"integer divide check", @|
"integer overflow", @|
"float-to-fix overflow", @|
"invalid floating point operation", @|
"floating point overflow", @|
"floating point underflow", @|
"floating point division by zero", @|
@z
